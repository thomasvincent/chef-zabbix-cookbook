# Virtual Host configuration for <%= @domain %>
# Generated by Chef for <%= node['fqdn'] %>

<% if @ssl_enabled && @redirect_http_to_https %>
<VirtualHost <%= @ip_address %>:<%= @port %>>
    ServerName <%= @domain %>
    <% unless @aliases.empty? %>
    ServerAlias <%= @aliases.join(' ') %>
    <% end %>
    
    # Redirect all HTTP requests to HTTPS
    RewriteEngine On
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
    
    # Log configuration
    ErrorLog <%= @error_log %>
    CustomLog <%= @custom_log %>
</VirtualHost>

<VirtualHost <%= @ip_address %>:443>
<% else %>
<VirtualHost <%= @ip_address %>:<%= @port %>>
<% end %>
    # Basic virtual host configuration
    ServerName <%= @domain %>
    <% unless @aliases.empty? %>
    ServerAlias <%= @aliases.join(' ') %>
    <% end %>
    ServerAdmin <%= @server_admin %>
    DocumentRoot "<%= @document_root %>"
    
    # Log configuration
    ErrorLog <%= @error_log %>
    CustomLog <%= @custom_log %>
    
    # Directory configuration
    <Directory "<%= @document_root %>">
        Options <%= @directory_options %>
        AllowOverride <%= @allow_override %>
        Require all granted
        
        # Directory index
        DirectoryIndex <%= @directory_index %>
    </Directory>
    
    <% unless @directory_configs.empty? %>
    # Additional directory configurations
    <% @directory_configs.each do |config| %>
    <Directory "<%= config['path'] %>">
        <% config.each do |key, value| %>
        <% next if key == 'path' %>
        <%= key %> <%= value %>
        <% end %>
    </Directory>
    <% end %>
    <% end %>
    
    <% unless @location_configs.empty? %>
    # Location configurations
    <% @location_configs.each do |config| %>
    <Location "<%= config['path'] %>">
        <% config.each do |key, value| %>
        <% next if key == 'path' %>
        <%= key %> <%= value %>
        <% end %>
    </Location>
    <% end %>
    <% end %>
    
    <% unless @files_match_configs.empty? %>
    # FilesMatch configurations
    <% @files_match_configs.each do |config| %>
    <FilesMatch "<%= config['pattern'] %>">
        <% config.each do |key, value| %>
        <% next if key == 'pattern' %>
        <%= key %> <%= value %>
        <% end %>
    </FilesMatch>
    <% end %>
    <% end %>
    
    <% unless @proxy_configs.empty? %>
    # Proxy configurations
    <% @proxy_configs.each do |config| %>
    ProxyPass "<%= config['path'] %>" "<%= config['url'] %>"
    ProxyPassReverse "<%= config['path'] %>" "<%= config['url'] %>"
    <% end %>
    <% end %>
    
    <% unless @headers.empty? %>
    # Custom headers
    <% @headers.each do |key, value| %>
    Header always set <%= key %> "<%= value %>"
    <% end %>
    <% end %>
    
    <% if @ssl_enabled %>
    # SSL configuration
    SSLEngine on
    SSLCertificateFile <%= @ssl_cert %>
    SSLCertificateKeyFile <%= @ssl_key %>
    <% if @ssl_chain %>
    SSLCertificateChainFile <%= @ssl_chain %>
    <% end %>
    
    # SSL protocols and ciphers
    SSLProtocol <%= @ssl_protocol.is_a?(Array) ? @ssl_protocol.join(' ') : @ssl_protocol %>
    SSLCipherSuite <%= @ssl_cipher_suite %>
    SSLHonorCipherOrder <%= @ssl_honor_cipher_order %>
    SSLSessionTickets <%= @ssl_session_tickets %>
    SSLSessionCache <%= @ssl_session_cache %>
    SSLSessionTimeout <%= @ssl_session_timeout %>
    
    <% if @hsts_enabled %>
    # HTTP Strict Transport Security
    Header always set Strict-Transport-Security "max-age=<%= @hsts_max_age %><% if @hsts_include_subdomains %>; includeSubDomains<% end %><% if @hsts_preload %>; preload<% end %>"
    <% end %>
    <% end %>
    
    <% if @enable_cgi %>
    # CGI configuration
    ScriptAlias /cgi-bin/ "<%= @document_root %>/cgi-bin/"
    <Directory "<%= @document_root %>/cgi-bin">
        AllowOverride None
        Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
        Require all granted
    </Directory>
    <% end %>
    
    <% if @enable_php %>
    # PHP configuration
    <FilesMatch \.php$>
        SetHandler application/x-httpd-php
    </FilesMatch>
    <% end %>
    
    <% if @enable_perl %>
    # Perl configuration
    <FilesMatch \.pl$>
        SetHandler perl-script
        PerlResponseHandler ModPerl::Registry
        Options +ExecCGI
        PerlOptions +ParseHeaders
    </FilesMatch>
    <% end %>
    
    <% if @enable_python %>
    # Python configuration
    <FilesMatch \.py$>
        SetHandler python-program
        PythonHandler mod_python.publisher
        PythonDebug On
    </FilesMatch>
    <% end %>
    
    <% unless @custom_directives.empty? %>
    # Custom directives
    <% @custom_directives.each do |directive| %>
    <%= directive %>
    <% end %>
    <% end %>
</VirtualHost>